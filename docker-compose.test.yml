version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    ports:
      - "5433:5432"  # Changed from 5432:5432 to avoid conflict with local PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=quantum_user
      - POSTGRES_PASSWORD=quantum_password
      - POSTGRES_DB=quantum_hub
    networks:
      - quantum-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quantum_user -d quantum_hub"]
      interval: 10s
      timeout: 5s
      retries: 3

  auth_service:
    build:
      context: .
      dockerfile: services/auth_service/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://quantum_user:quantum_password@postgres:5432/quantum_hub
      - JWT_SECRET_KEY=your-secret-key
    command: uvicorn services.auth_service.app.main:app --host 0.0.0.0 --port 8000
    working_dir: /app
    depends_on:
      - postgres
    networks:
      - quantum-net
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  project_service:
    build:
      context: .
      dockerfile: services/project_service/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://quantum_user:quantum_password@postgres:5432/quantum_hub
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    working_dir: /app/services/project_service
    depends_on:
      - postgres
    networks:
      - quantum-net
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  registry_service:
    build:
      context: .
      dockerfile: services/registry_service/Dockerfile
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://quantum_user:quantum_password@postgres:5432/quantum_hub
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    working_dir: /app/services/registry_service
    depends_on:
      - postgres
    networks:
      - quantum-net
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  marketplace_service:
    build:
      context: .
      dockerfile: services/marketplace_service/Dockerfile
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://quantum_user:quantum_password@postgres:5432/quantum_hub
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    working_dir: /app/services/marketplace_service
    depends_on:
      - postgres
    networks:
      - quantum-net
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  api_gateway:
    build:
      context: .
      dockerfile: services/api_gateway/Dockerfile
    ports:
      - "9000:8000"  # Changed to port 9000 to avoid conflict
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000
      - PROJECT_SERVICE_URL=http://project_service:8000
      - REGISTRY_SERVICE_URL=http://registry_service:8000
      - MARKETPLACE_SERVICE_URL=http://marketplace_service:8000
      - WEB_IDE_SERVICE_URL=http://web_ide_service:8000
      - JWT_SECRET_KEY=your-secret-key
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    working_dir: /app/services/api_gateway
    depends_on:
      - auth_service
      - project_service
      - registry_service
      - marketplace_service
      - web_ide_service
    networks:
      - quantum-net
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  web_ide_service:
    build:
      context: ./backend/web_ide
      dockerfile: Dockerfile
    ports:
      - "8010:8000"  # FastAPI backend for IDE management
      - "8085:8080"  # Changed Code Server UI port to 8085
    volumes:
      - ./backend/web_ide/src:/app
      - web_ide_workspace:/workspace
      - web_ide_templates:/templates
    environment:
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - VSCODE_HOST=0.0.0.0
      - VSCODE_PORT=8080
      - WORKSPACE_DIR=/workspace
      - TEMPLATE_DIR=/templates
      - DATABASE_URL=postgresql://quantum_user:quantum_password@postgres:5432/quantum_hub
      - AUTH_SERVICE_URL=http://auth_service:8000
      - PROJECT_SERVICE_URL=http://project_service:8000
    depends_on:
      - postgres
    networks:
      - quantum-net
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  quantum-net:
    driver: bridge

volumes:
  web_ide_workspace:
    driver: local
  web_ide_templates:
    driver: local
  postgres_data:
    driver: local
